package 剑指Offer.type14_时间空间效率的平衡;

public class Q03_数组中的逆序对 {
	/*
	 * 在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。
	 * 
	 * 输入一个数组,求出这个数组中的逆序对的总数P。
	 * 
	 * 并将P对1000000007取模的结果输出。 
	 * 
	 * 即输出P%1000000007
	 */
	
	/*
	 * 输入描述:
		题目保证输入的数组中没有的相同的数字
		数据范围：
			对于%50的数据,size<=10^4
			对于%75的数据,size<=10^5
			对于%100的数据,size<=2*10^5
		
		示例1
		输入
			1,2,3,4,5,6,7,0
		输出
			7
	 */
	
	
	/*
	 	归并排序的改进，把数据分成前后两个数组(递归分到每个数组仅有一个数据项)，
		合并数组，合并时，出现前面的数组值array[i]大于后面数组值array[j]时；则前面
		数组array[i]~array[mid]都是大于array[j]的，count += mid+1 - i
		参考剑指Offer，但是感觉剑指Offer归并过程少了一步拷贝过程。
		还有就是测试用例输出结果比较大，对每次返回的count mod(1000000007)求余
	 */	
	
	public int InversePairs(int[] array) {

	}
}
